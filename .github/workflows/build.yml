name: Test Suite

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build cmd/api
      working-directory: cmd/api
      run: go build -v .

    - name: Build cmd/frontend
      working-directory: cmd/frontend
      run: go build -v .

    - name: Build internal/datastore
      run: go build -v .
      working-directory: internal/datastore

    - name: Test internal/datastore
      run: go test -v -bench=. .
      working-directory: internal/datastore

    - name: Build pkg/books
      run: go build -v .
      working-directory: pkg/books

    - name: Test pkg/books
      run: go test -v -bench=. .
      working-directory: pkg/books

    - name: Build internal/api
      run: go build -v .
      working-directory: internal/api

    - name: Test internal/api
      run: go test -v -bench=. .
      working-directory: internal/api

    - name: Build internal/frontend
      run: go build -v .
      working-directory: internal/frontend

    - name: Test internal/frontend
      run: go test -v -bench=. .
      working-directory: internal/frontend
